class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> results = new ArrayList<List<Integer>>();
        Arrays.sort(nums);
        DFS(nums,0,new ArrayList<Integer>(),results);
        return results;
    }
    
    private void DFS(int[] nums,int start,List<Integer> currList ,List<List<Integer>> results){
        results.add(new ArrayList<Integer>(currList));
        for (int i = start;i < nums.length;i++){
            if (i > start && nums[i - 1] == nums[i])continue;
            currList.add(nums[i]);
            DFS(nums,i + 1,currList,results);
            currList.remove(currList.size() - 1);
        }
    }
}
