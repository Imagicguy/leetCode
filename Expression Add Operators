public List<String> addOperators(String num, int target) {
        List<String> results = new ArrayList<String>();
        if (num == null || num.length() == 0)return results;
        helper(results,target,"",num,0,0,0);
        return results;
    }
    
    private void helper(List<String> results,int target,String path,String num,int pos,long prev,long TotalValue){
        if (pos == num.length()){
            if (TotalValue == target)results.add(path);
         
            return;
        }
      
        for (int i = pos;i < num.length();i++){
          if (i != pos && num.charAt(pos) == '0')break;//like "0131" start with 0 can't be interpreted
          long curr = Long.parseLong(num.substring(pos,i+1));//get currBlock we want to add
          if (pos == 0){
            helper(results,target,path + curr,num,i + 1,curr,curr);
          }else{
            helper(results,target,path + "+" + curr,num,i + 1,curr,TotalValue + curr);
            helper(results,target,path + "-" + curr,num,i + 1,-curr,TotalValue - curr);
            helper(results,target,path + "*" + curr,num,i + 1,prev * curr,TotalValue - prev + prev* curr);
          }
        }
    }
