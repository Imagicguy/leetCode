class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        Stack<ListNode> stack1 = new Stack<ListNode>();
        Stack<ListNode> stack2 = new Stack<ListNode>();
        while (l1 != null){
            stack1.push(l1);
            l1 = l1.next;
        }
        while (l2 != null){
            stack2.push(l2);
            l2 = l2.next;
        }
        ListNode dummy = new ListNode(0);
        
        int carry = 0;
        while (!stack1.isEmpty() || !stack2.isEmpty()){
            ListNode n1 = null,n2 = null;
            int sum = carry;
            if (!stack1.isEmpty()){
                n1 = stack1.pop();
                sum += n1.val;
            }
            if (!stack2.isEmpty()){
                n2 = stack2.pop();
                sum += n2.val;
            }
            
            ListNode newNode = new ListNode(sum % 10);
            carry = sum / 10;
            newNode.next = dummy.next;
            dummy.next = newNode;
            
            
        }
        if (carry != 0){
            ListNode newNode = new ListNode(carry);
            newNode.next = dummy.next;
            dummy.next = newNode;
        }
        return dummy.next;
    }
}
